name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  root_static_analysis:
    name: Root Static Analysis
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Setup Node
        uses: actions/setup-node@v1.4.1
        with:
          node-version: 12.16
      - name: Install Yarn
        run: npm install --global yarn@1.22
      - name: Install Node dependencies
        run: yarn install --immutable --immutable-cache
      - name: Lint files
        run: yarn lint:files
  server_static_analysis:
    name: Server Static Analysis
    runs-on: ubuntu-18.04
    env:
      CARGO_HOME: .cargo
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Setup Node
        uses: actions/setup-node@v1.4.1
        with:
          node-version: 12.16
      - name: Install Yarn
        run: npm install --global yarn@1.22
      - name: Install Node dependencies
        run: yarn install --immutable --immutable-cache
      - name: Install Rust and Cargo
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          components: clippy, rustfmt
        working-directory: packages/server
  #     - name: Restore Cargo cache
  #       uses: actions/cache@v1.1.2
  #       with:
  #         path: $CARGO_HOME/bin
  #         key: ${{ runner.os }}-server-cargo-cache-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: ${{ runner.os }}-cargo-cache-
  #       working-directory: packages/server
  #     - name: Restore Cargo cache
  #       uses: actions/cache@v1.1.2
  #       with:
  #         path: $CARGO_HOME/git/db
  #         key: ${{ runner.os }}-server-cargo-cache-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: ${{ runner.os }}-cargo-cache-
  #       working-directory: packages/server
  #     - name: Restore Cargo cache
  #       uses: actions/cache@v1.1.2
  #       with:
  #         path: $CARGO_HOME/registry/cache
  #         key: ${{ runner.os }}-server-cargo-cache-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: ${{ runner.os }}-cargo-cache-
  #       working-directory: packages/server
  #     - name: Restore Cargo cache
  #       uses: actions/cache@v1.1.2
  #       with:
  #         path: $CARGO_HOME/registry/index
  #         key: ${{ runner.os }}-server-cargo-cache-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: ${{ runner.os }}-cargo-cache-
  #       working-directory: packages/server
  #     - name: Lint files, scripts, and types
  #       run: yarn lint
  #       working-directory: packages/server
  # server_test:
  #   name: Server Test
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2.0.0
  #     - name: Setup Node
  #       uses: actions/setup-node@v1.4.1
  #       with:
  #         node-version: 12.16
  #     - name: Install Yarn
  #       run: npm install --global yarn@1.22
  #     - name: Install Node dependencies
  #       run: yarn install --immutable --immutable-cache
  #     - name: Install Rust and Cargo
  #       uses: actions-rs/toolchain@v1.0.5
  #       with:
  #         profile: minimal
  #         components: clippy, rustfmt
  #     - name: Restore Poetry cache
  #       uses: actions/cache@v1.1.2
  #       with:
  #         path: ${{ steps.poetry-cache.outputs.dir }}
  #         key: ${{ runner.os }}-poetry-cache-${{ hashFiles('**/poetry.lock') }}
  #         restore-keys: ${{ runner.os }}-cargo-cache-
  #     - name: Test units
  #       run: yarn test:units
  #       working-directory: packages/server
  #     - name: Publish code coverage results
  #       uses: codecov/codecov-action@v1.0.6
  #       with:
  #         flags: server
