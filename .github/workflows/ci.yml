name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  root_static_analysis:
    name: Root Static Analysis
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Setup Node
        uses: actions/setup-node@v1.4.1
        with:
          node-version: 12.16
      - name: Install Yarn
        run: npm install --global yarn@1.22
      - name: Install Node dependencies
        run: yarn install --immutable --immutable-cache
      - name: Lint files
        run: yarn lint:files
  server_static_analysis:
    name: Server Static Analysis
    runs-on: ubuntu-18.04
    env:
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -C codegen-units=1 -C inline-threshold=0 -C link-dead-code -C overflow-checks=off -Z no-landing-pads -Z profile
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Setup Node
        uses: actions/setup-node@v1.4.1
        with:
          node-version: 12.16
      - name: Install Yarn
        run: npm install --global yarn@1.22
      - name: Install Node dependencies
        run: yarn install --immutable --immutable-cache
      - name: Setup Cargo cache
        run: sudo chown -H --recursive $(id --name --user):$(id --group --name) ~/.cargo
      - name: Restore Cargo executables
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/bin
          key: server-cargo-executables-${{ github.ref }}-${{ hashFiles('packages/server/**/Cargo.lock') }}
          restore-keys: |
            server-cargo-executables-${{ github.ref }}-
            server-cargo-executables-
      - name: Restore Cargo Git sources
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/git/db
          key: server-cargo-git-sources-${{ github.ref }}-${{ hashFiles('packages/server/**/Cargo.lock') }}
          restore-keys: |
            server-cargo-git-sources-${{ github.ref }}-
            server-cargo-git-sources-
      - name: Restore Cargo packages
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/registry/cache
          key: server-cargo-packages-${{ github.ref }}-${{ hashFiles('packages/server/**/Cargo.lock') }}
          restore-keys: |
            server-cargo-packages-${{ github.ref }}-
            server-cargo-packages-
      - name: Restore Cargo metadata
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/registry/index
          key: server-cargo-metadata-${{ github.ref }}-${{ hashFiles('packages/server/**/Cargo.lock') }}
          restore-keys: |
            server-cargo-metadata-${{ github.ref }}-
            server-cargo-metadata-
      - name: Restore Cargo artifacts
        uses: actions/cache@v1.1.2
        with:
          path: packages/server/target
          key: server-cargo-artifacts-${{ github.ref }}-${{ hashFiles('packages/server/**/Cargo.lock') }}
          restore-keys: |
            server-cargo-artifacts-${{ github.ref }}-
            server-cargo-artifacts-
      - name: Install Rust and Cargo
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly-2020-03-19
          default: true
          profile: minimal
          components: clippy, rustfmt
      - name: Lint files, scripts, and types
        run: yarn lint
        working-directory: packages/server
      - run: ls -ahl packages/server/target
      - run: ls -ahl packages/server/target/debug
  server_test:
    name: Server Test
    runs-on: ubuntu-18.04
    env:
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -C codegen-units=1 -C inline-threshold=0 -C link-dead-code -C overflow-checks=off -Z no-landing-pads -Z profile
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Setup Node
        uses: actions/setup-node@v1.4.1
        with:
          node-version: 12.16
      - name: Install Yarn
        run: npm install --global yarn@1.22
      - name: Install Node dependencies
        run: yarn install --immutable --immutable-cache
      - name: Setup Cargo cache
        run: sudo chown -H --recursive $(id --name --user):$(id --group --name) ~/.cargo
      - name: Restore Cargo executables
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/bin
          key: server-cargo-executables-${{ github.ref }}-${{ hashFiles('packages/server/**/Cargo.lock') }}
          restore-keys: |
            server-cargo-executables-${{ github.ref }}-
            server-cargo-executables-
      - name: Restore Cargo Git sources
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/git/db
          key: server-cargo-git-sources-${{ github.ref }}-${{ hashFiles('packages/server/**/Cargo.lock') }}
          restore-keys: |
            server-cargo-git-sources-${{ github.ref }}-
            server-cargo-git-sources-
      - name: Restore Cargo packages
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/registry/cache
          key: server-cargo-packages-${{ github.ref }}-${{ hashFiles('packages/server/**/Cargo.lock') }}
          restore-keys: |
            server-cargo-packages-${{ github.ref }}-
            server-cargo-packages-
      - name: Restore Cargo metadata
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/registry/index
          key: server-cargo-metadata-${{ github.ref }}-${{ hashFiles('packages/server/**/Cargo.lock') }}
          restore-keys: |
            server-cargo-metadata-${{ github.ref }}-
            server-cargo-metadata-
      - name: Restore Cargo artifacts
        uses: actions/cache@v1.1.2
        with:
          path: packages/server/target
          key: server-cargo-artifacts-${{ github.ref }}-${{ hashFiles('packages/server/**/Cargo.lock') }}
          restore-keys: |
            server-cargo-artifacts-${{ github.ref }}-
            server-cargo-artifacts-
      - name: Install Rust and Cargo
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly-2020-03-19
          default: true
          profile: minimal
      - name: Install Rust dependencies
        run: cargo install grcov
        working-directory: packages/server
      - name: Test units
        run: yarn test:units
        working-directory: packages/server
      - name: Generate code coverage report
        run: grcov --branch --ignore '/*' --ignore-not-existing --llvm --output-file lcov.info --source-dir . target
        working-directory: packages/server
      - name: Publish code coverage report
        uses: codecov/codecov-action@v1.0.6
        with:
          flags: server
      - run: ls -ahl packages/server/target
      - run: ls -ahl packages/server/target/debug
      # - find target/debug -type f -maxdepth 1 -delete
      # - rm -rf target/.rustc_info.json
      # - name: Cleanup Cargo cache
      #   run: |
      #     rm --force --recursive packages/server/target/debug/{.fingerpint,deps}/server*
      #     rm --force --recursive packages/server/target/debug/{examples,incremental}
