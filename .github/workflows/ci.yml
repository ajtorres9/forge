name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  root_static_analysis:
    name: Root Static Analysis
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Setup Node
        uses: actions/setup-node@v1.4.1
        with:
          node-version: 12.16
      - name: Install Yarn
        run: npm install --global yarn@1.22
      - name: Install Node dependencies
        run: yarn install --immutable --immutable-cache
      - name: Lint files
        run: yarn lint:files
  server_static_analysis:
    name: Server Static Analysis
    runs-on: ubuntu-18.04
    env:
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -C codegen-units=1 -C inline-threshold=0 -C link-dead-code -C overflow-checks=off -Z no-landing-pads -Z profile
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Setup Node
        uses: actions/setup-node@v1.4.1
        with:
          node-version: 12.16
      - name: Install Yarn
        run: npm install --global yarn@1.22
      - name: Install Node dependencies
        run: yarn install --immutable --immutable-cache
      - name: Setup Cargo cache
        run: sudo chown -H --recursive $(id --name --user):$(id --group --name) ~/.cargo

      # - name: Restore Cargo executables
      #   uses: actions/cache@v1.1.2
      #   id: restore-cargo-executables
      #   with:
      #     path: ~/.cargo/bin
      #     key: server-cargo-executables-v1-${{ hashFiles('packages/server/**/rust-toolchain') }}
      #     restore-keys: server-cargo-executables-v1-
      # - name: Restore Cargo Git sources
      #   uses: actions/cache@v1.1.2
      #   id: restore-cargo-git-sources
      #   with:
      #     path: ~/.cargo/git/db
      #     key: server-cargo-git-sources-v1-${{ hashFiles('packages/server/**/rust-toolchain') }}
      #     restore-keys: server-cargo-git-sources-v1-
      # - name: Restore Cargo packages
      #   uses: actions/cache@v1.1.2
      #   id: restore-cargo-packages
      #   with:
      #     path: ~/.cargo/registry/cache
      #     key: server-cargo-packages-v1-${{ hashFiles('packages/server/**/rust-toolchain') }}
      #     restore-keys: server-cargo-packages-v1-
      # - name: Restore Cargo metadata
      #   uses: actions/cache@v1.1.2
      #   id: restore-cargo-metadata
      #   with:
      #     path: ~/.cargo/registry/index
      #     key: server-cargo-metadata-v1-${{ hashFiles('packages/server/**/rust-toolchain') }}
      #     restore-keys: server-cargo-metadata-v1-
      # - name: Restore Cargo artifacts
      #   uses: actions/cache@v1.1.2
      #   id: restore-cargo-artifacts
      #   with:
      #     path: packages/server/target
      #     key: server-cargo-artifacts-v1-${{ hashFiles('packages/server/**/Cargo.lock') }}
      #     restore-keys: server-cargo-artifacts-v1-

      - name: Install Rust and Cargo
        # if: steps.restore-cargo-executables.outputs.cache-hit == 'false' || steps.restore-cargo-git-sources.outputs.cache-hit == 'false' || steps.restore-cargo-packages.outputs.cache-hit == 'false' || steps.restore-cargo-metadata.outputs.cache-hit == 'false'
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly-2020-04-10
          default: true
          profile: minimal
          components: clippy, rustfmt
      - name: Install Rust dependencies
        run: cargo install grcov@0.5.9 || exit 0
      - name: Build
        # if: steps.restore-cargo-artifacts.outputs.cache-hit == 'false'
        run: yarn build
        working-directory: packages/server
      - name: Lint files, scripts, and types
        run: yarn lint
        working-directory: packages/server
      - name: Cleanup Cargo cache
        run: rm --force --recursive packages/server/target/{debug/{{.fingerpint,deps}/server-*,examples,incremental,.cargo-lock,server{,.d*}},.rustc_info.json}
  server_test:
    name: Server Test
    runs-on: ubuntu-18.04
    env:
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -C codegen-units=1 -C inline-threshold=0 -C link-dead-code -C overflow-checks=off -Z no-landing-pads -Z profile
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Setup Node
        uses: actions/setup-node@v1.4.1
        with:
          node-version: 12.16
      - name: Install Yarn
        run: npm install --global yarn@1.22
      - name: Install Node dependencies
        run: yarn install --immutable --immutable-cache
      - name: Setup Cargo cache
        run: sudo chown -H --recursive $(id --name --user):$(id --group --name) ~/.cargo

      # - name: Restore Cargo executables
      #   uses: actions/cache@v1.1.2
      #   id: restore-cargo-executables
      #   with:
      #     path: ~/.cargo/bin
      #     key: server-cargo-executables-v1-${{ hashFiles('packages/server/**/rust-toolchain') }}
      #     restore-keys: server-cargo-executables-v1-
      # - name: Restore Cargo Git sources
      #   uses: actions/cache@v1.1.2
      #   id: restore-cargo-git-sources
      #   with:
      #     path: ~/.cargo/git/db
      #     key: server-cargo-git-sources-v1-${{ hashFiles('packages/server/**/rust-toolchain') }}
      #     restore-keys: server-cargo-git-sources-v1-
      # - name: Restore Cargo packages
      #   uses: actions/cache@v1.1.2
      #   id: restore-cargo-packages
      #   with:
      #     path: ~/.cargo/registry/cache
      #     key: server-cargo-packages-v1-${{ hashFiles('packages/server/**/rust-toolchain') }}
      #     restore-keys: server-cargo-packages-v1-
      # - name: Restore Cargo metadata
      #   uses: actions/cache@v1.1.2
      #   id: restore-cargo-metadata
      #   with:
      #     path: ~/.cargo/registry/index
      #     key: server-cargo-metadata-v1-${{ hashFiles('packages/server/**/rust-toolchain') }}
      #     restore-keys: server-cargo-metadata-v1-
      # - name: Restore Cargo artifacts
      #   uses: actions/cache@v1.1.2
      #   id: restore-cargo-artifacts
      #   with:
      #     path: packages/server/target
      #     key: server-cargo-artifacts-v1-${{ hashFiles('packages/server/**/Cargo.lock') }}
      #     restore-keys: server-cargo-artifacts-v1-

      - name: Install Rust and Cargo
        # if: steps.restore-cargo-executables.outputs.cache-hit == 'false' || steps.restore-cargo-git-sources.outputs.cache-hit == 'false' || steps.restore-cargo-packages.outputs.cache-hit == 'false' || steps.restore-cargo-metadata.outputs.cache-hit == 'false'
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly-2020-04-10
          default: true
          profile: minimal
      - name: Install Rust dependencies
        run: |
          cargo install grcov || exit 0
          grcov --version
      - name: Build
        # if: steps.restore-cargo-artifacts.outputs.cache-hit == 'false'
        run: yarn build
        working-directory: packages/server
      - name: Test units
        run: yarn test:units
        working-directory: packages/server
      - name: Generate code coverage report
        run: |
          mkdir coverage
          grcov --branch --ignore '/*' --ignore-not-existing --llvm --output-file coverage/lcov.info --source-dir . target
        working-directory: packages/server
      - name: Publish code coverage report
        uses: codecov/codecov-action@v1.0.6
        with:
          file: packages/server/coverage/lcov.info
          flags: server
      - name: Cleanup Cargo cache
        run: rm --force --recursive packages/server/target/{debug/{{.fingerpint,deps}/server-*,examples,incremental,.cargo-lock,server{,.d*}},.rustc_info.json}
